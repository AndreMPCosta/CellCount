#:import license license

#:import Toolbar kivymd.toolbar.Toolbar
#:import ThemeManager kivymd.theming.ThemeManager
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerDivider kivymd.navigationdrawer.NavigationDrawerDivider
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar
#:import NavigationDrawerSubheader kivymd.navigationdrawer.NavigationDrawerSubheader
#:import MDCheckbox kivymd.selectioncontrols.MDCheckbox
#:import MDThemePicker kivymd.theme_picker.MDThemePicker
#:import MDLabel kivymd.label
#:import MDTabbedPanel kivymd.tabs.MDTabbedPanel
#:import OneLineAvatarIconListItem kivymd.list.OneLineAvatarIconListItem
#:import OneLineListItem kivymd.list.OneLineListItem
#:import MDAccordion kivymd.accordion.MDAccordion
#:import MDAccordionItem kivymd.accordion.MDAccordionItem
#:import MDAccordionSubItem kivymd.accordion.MDAccordionSubItem
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import MDIconButton kivymd.button.MDIconButton


CellCountRoot:
    id: main_layout
    NavDrawer:
        id: nav_drawer
    BoxLayout:
        orientation: 'vertical'
        id: main_box
        Toolbar:
            id: toolbar
            title: 'CellCount'
            md_bg_color: app.theme_cls.primary_color
            background_palette: 'Primary'
            background_hue: '500'
            left_action_items: [['menu', lambda x: app.root.toggle_nav_drawer()]]
            right_action_items: [['dots-vertical', lambda x: self.dots_menu.open(self.ids.right_actions)]]
        ScreenManagement:
            id: scr_mngr

<NavDrawer>:
    id: nav_drawer
    NavigationDrawerToolbar:
        title: "Navigation Drawer"
    NavigationDrawerIconButton:
        icon: 'checkbox-blank-circle'
        text: "Current Session"
        on_release: app.root.ids.scr_mngr.current = 'current_session'
    NavigationDrawerIconButton:
        icon: 'checkbox-blank-circle'
        text: "Select Cell Type"
        on_release: app.root.ids.scr_mngr.current = 'workspace'
    NavigationDrawerIconButton:
        icon: 'checkbox-blank-circle'
        text: "Stored Results"
        on_release: app.root.ids.scr_mngr.current = 'results'
    NavigationDrawerIconButton:
        icon: 'checkbox-blank-circle'
        text: "Themes"
        on_release: app.root.ids.scr_mngr.current = 'current_session'

<ScreenManagement>:
#    Workspace:
#    Screen:
#        name: 'theming'
#        BoxLayout:
#            orientation: 'vertical'
#            size_hint_y: None
#            height: dp(80)
#            center_y: self.parent.center_y
#            MDRaisedButton:
#                size_hint: None, None
#                size: 3 * dp(48), dp(48)
#                center_x: self.parent.center_x
#                text: 'Change theme'
#                on_release: MDThemePicker().open()
#                opposite_colors: True
#                pos_hint: {'center_x': 0.5}
#            MDLabel:
#                text: "Current: " + app.theme_cls.theme_style + ", " + app.theme_cls.primary_palette
#                theme_text_color: 'Primary'
#                pos_hint: {'center_x': 0.5}
#                halign: 'center'


<ShowLicense>:
    link_label: link_label
    size_hint: .8, .8
    MDLabel:
        id: link_label
        font_style: 'Body1'
        theme_text_color: 'Primary'
        valign: 'top'
        pos: root.x, root.y
        text_size: self.width, None
        size_hint_y: None
        height: self.texture_size[1]


<Workspace>:
    accordion: accordion
    name: 'workspace'
    BoxLayout:
        MDAccordion:
            id: accordion
            orientation: 'vertical'
            size_hint_x: None
            width: '185dp'
            MDAccordionItem:
                title: app.group_cells[0]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[0]][0].keys()[0]
                    on_release: secondary_screen_manager.current = app.items[app.group_cells[0]][0].keys()[0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[0]][1]
            MDAccordionItem:
                title: app.group_cells[1]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][1]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][2]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][3]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][4]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][5].keys()[0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[1]][6].keys()[0]
            MDAccordionItem:
                title: app.group_cells[2]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[2]][0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[2]][1]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[2]][2]
            MDAccordionItem:
                title: app.group_cells[3]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[3]][0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[3]][1]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[3]][2]
            MDAccordionItem:
                title: app.group_cells[4]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[4]][0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[4]][1]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[4]][2]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[4]][3]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[4]][4]
            MDAccordionItem:
                title: app.group_cells[5]
                icon: 'checkbox-blank-circle'
                MDAccordionSubItem:
                    text: app.items[app.group_cells[5]][0]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[5]][1]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[5]][2]
                MDAccordionSubItem:
                    text: app.items[app.group_cells[5]][3]
        SecondScreenManagement:
            id: secondary_screen_manager
            Erithroblast:
#        MDLabel:
#            text: "Empty Workspace"
#            theme_text_color: 'Primary'
#            pos_hint: {'center_x': 0.5}
#            halign: 'center'
#    MDFloatingActionButton:
#        id: add_cells
#        icon: 'plus'
#        opposite_colors: True
#        elevation_normal: 8
#        pos_hint: {'center_x': 0.85, 'center_y': 0.1}
#        on_release: app.root.ids.scr_mngr.change_screen('pickspace')

<Theming>:
    name: 'theming'
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: None
        height: dp(80)
        center_y: self.parent.center_y
        MDRaisedButton:
            size_hint: None, None
            size: 3 * dp(48), dp(48)
            center_x: self.parent.center_x
            text: 'Change theme'
            on_release: MDThemePicker().open()
            opposite_colors: True
            pos_hint: {'center_x': 0.5}
        MDLabel:
            text: "Current: " + app.theme_cls.theme_style + ", " + app.theme_cls.primary_palette
            theme_text_color: 'Primary'
            pos_hint: {'center_x': 0.5}
            halign: 'center'

<CurrentSession>:
    pick_layout: pick_layout
    name: 'current_session'
    MDLabel:
        text: 'Empty Workspace'
        halign: 'center'
        pos_hint: {'center_x': 0.5}
        theme_text_color: 'Primary'
    GridLayout:
        id: pick_layout
        cols: 2
        col_force_default: 'true'
        col_default_width: root.width / 2

#    MDTabbedPanel:
#        id: tab_panel
#        tab_display_mode:'text'
#        tab_width_mode: 'stacked'

<Erithroblast>:
    name: app.items[app.group_cells[0]][0].keys()[0]
    GridLayout:
        id: pick_layout
        cols: 2
#        col_force_default: 'true'
#        col_default_width: dp(72)
        row_force_default: True
        row_default_height: dp(72)
        BoxLayout:
            orientation: 'horizontal'
            MDLabel:
                id: l1
                font_style: "Caption"
                halign: "center"
                text: app.items[app.group_cells[0]][0].values()[0][0]
                theme_text_color: 'Secondary' if app.theme_cls.theme_style == 'Light' else 'Primary'
            MDCheckbox:
                id: Proerythroblast
                size_hint: None, None
                size: dp(48), dp(48)
                pos_hint: {'center_x': 0.25, 'center_y': 0.5}
        BoxLayout:
            orientation: 'horizontal'
            MDLabel:
                id: l2
                font_style: "Caption"
                halign: "center"
                text: app.items[app.group_cells[0]][0].values()[0][1]
                theme_text_color: 'Secondary' if app.theme_cls.theme_style == 'Light' else 'Primary'
            MDCheckbox:
                id: Basophilic erythroblast
                size_hint: None, None
                size: dp(48), dp(48)
                pos_hint: {'center_x': 0.25, 'center_y': 0.5}
        BoxLayout:
            orientation: 'horizontal'
            MDLabel:
                id: l3
                font_style: "Caption"
                halign: "center"
                text: app.items[app.group_cells[0]][0].values()[0][2]
                theme_text_color: 'Secondary' if app.theme_cls.theme_style == 'Light' else 'Primary'
            MDCheckbox:
                id: Polychromatic erythroblast
                size_hint: None, None
                size: dp(48), dp(48)
                pos_hint: {'center_x': 0.25, 'center_y': 0.5}
        BoxLayout:
            orientation: 'horizontal'
            MDLabel:
                id: l4
                font_style: "Caption"
                halign: "center"
                text: app.items[app.group_cells[0]][0].values()[0][3]
                theme_text_color: 'Secondary' if app.theme_cls.theme_style == 'Light' else 'Primary'
            MDCheckbox:
                id: Orthochromatic erythroblast
                size_hint: None, None
                size: dp(48), dp(48)
                pos_hint: {'center_x': 0.25, 'center_y': 0.5}
    MDFloatingActionButton:
        id: add_cells
        icon: 'plus'
        opposite_colors: True
        elevation_normal: 8
        pos_hint: {'center_x': 0.85, 'center_y': 0.1}
        on_release: root.parent.populate_workspace(root)

<SecondScreenManagement>:
